{"remainingRequest":"D:\\vscode\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\vscode\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vscode\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vscode\\admin\\src\\views\\ArticleEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vscode\\admin\\src\\views\\ArticleEdit.vue","mtime":1569758106150},{"path":"D:\\vscode\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscode\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vscode\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscode\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\vscode\\\\admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    id: {}\n  },\n  data: function data() {\n    return {\n      model: {},\n      categories: []\n    };\n  },\n  methods: {\n    save: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.id) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.$http.put(\"rest/articles/\".concat(this.id), this.model);\n\n              case 3:\n                _context.next = 7;\n                break;\n\n              case 5:\n                _context.next = 7;\n                return this.$http.post('rest/articles', this.model);\n\n              case 7:\n                this.$router.push('/articles/list');\n                this.$message({\n                  type: \"success\",\n                  message: 'ok'\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    fetch: function () {\n      var _fetch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get(\"rest/articles/\".concat(this.id));\n\n              case 2:\n                res = _context2.sent;\n                this.model = res.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      return fetch;\n    }(),\n    fetchCategories: function () {\n      var _fetchCategories = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$http.get(\"rest/categories\");\n\n              case 2:\n                res = _context3.sent;\n                this.categories = res.data;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function fetchCategories() {\n        return _fetchCategories.apply(this, arguments);\n      }\n\n      return fetchCategories;\n    }()\n  },\n  created: function created() {\n    this.fetchCategories();\n    this.id && this.fetch();\n  }\n};",{"version":3,"sources":["ArticleEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGA,KAAA,EAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,KAAA,KAAA,CAAA,GAAA,yBAAA,KAAA,EAAA,GAAA,KAAA,KAAA,CAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAMA,KAAA,KAAA,CAAA,IAAA,CAAA,eAAA,EAAA,KAAA,KAAA,CANA;;AAAA;AAQA,qBAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;AACA,qBAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA,SADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcA,IAAA,KAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAeA,KAAA,KAAA,CAAA,GAAA,yBAAA,KAAA,EAAA,EAfA;;AAAA;AAeA,gBAAA,GAfA;AAgBA,qBAAA,KAAA,GAAA,GAAA,CAAA,IAAA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBA,IAAA,eAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmBA,KAAA,KAAA,CAAA,GAAA,mBAnBA;;AAAA;AAmBA,gBAAA,GAnBA;AAoBA,qBAAA,UAAA,GAAA,GAAA,CAAA,IAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAVA;AAiCA,EAAA,OAjCA,qBAiCA;AACA,SAAA,eAAA;AACA,SAAA,EAAA,IAAA,KAAA,KAAA,EAAA;AACA;AApCA,CAAA","sourcesContent":["<template>\r\n    <div class=\"about\">\r\n        <h1>{{id? '编辑':'新建'}}文章</h1>\r\n        <el-form label-width=\"120px\" @submit.native.prevent=\"save\">\r\n            <el-form-item label='所属分类'>\r\n                <el-select v-model=\"model.categories\" multiple >\r\n                    <el-option v-for=\"item in categories\" :key=\"item._id\" :label=\"item.name\" :value=\"item._id\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label='标题'>\r\n                <el-input v-model=\"model.title\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label='详情'>\r\n                <el-input v-model=\"model.body\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" native-type=\"submit\">提交</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {}\r\n        },\r\n        data() {\r\n            return {\r\n                model: {},\r\n                categories:[]\r\n            }\r\n        },\r\n        methods: {\r\n            async save() {\r\n\r\n                if (this.id) {\r\n                    await this.$http.put(`rest/articles/${this.id}`, this.model)\r\n                } else {\r\n                    await this.$http.post('rest/articles', this.model)\r\n                }\r\n                this.$router.push('/articles/list')\r\n                this.$message({\r\n                    type: \"success\",\r\n                    message: 'ok'\r\n                })\r\n            },\r\n            async fetch() {\r\n                const res = await this.$http.get(`rest/articles/${this.id}`)\r\n                this.model = res.data\r\n            },\r\n            async fetchCategories() {\r\n                const res = await this.$http.get(`rest/categories`)\r\n                this.categories = res.data\r\n            }\r\n        },\r\n        created() {\r\n            this.fetchCategories()\r\n            this.id && this.fetch()\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/views"}]}